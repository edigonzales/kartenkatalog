plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.graalvm.buildtools.native' version '0.10.6'
    id 'gg.jte.gradle' version '3.1.16'
}

apply from: "$rootDir/gradle/versioning.gradle"
apply from: "$rootDir/gradle/docker.gradle"

group = 'ch.so.agi'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'gg.jte:jte:3.1.16'
    implementation 'gg.jte:jte-spring-boot-starter-3:3.1.16'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jte {
    generate() 
    binaryStaticContent = true
}

tasks.named('test') {
    useJUnitPlatform()
}

import org.springframework.boot.gradle.tasks.aot.ProcessAot
tasks.withType(ProcessAot) {
    args "--spring.profiles.active=${project.findProperty('aotProfiles') ?: 'default'}"
}

graalvmNative {
    toolchainDetection = false
    binaries {
        main {
            buildArgs.add('-march=compatibility')
        }
    }
}